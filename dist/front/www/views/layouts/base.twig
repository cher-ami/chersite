<!DOCTYPE html>
{# TODO inject current language #}
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="imagetoolbar" content="no">
    <meta http-equiv="x-ua-compatible" content="IE=Edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    {# PAGE #}
    <title>{{ title | raw }}</title>
    <meta name="description" content="{{ description | raw }}">
    <link rel="canonical" href="{{ canonical | raw }}">

    {# FACEBOOK #}
    <meta property="og:type" content="website">
    <meta property="og:site_name" content="{{ siteName | raw }}">
    <meta property="og:url" content="{{ canonical | raw }}">
    <meta property="og:title" content="{{ title | raw }}">
    <meta property="og:description" content="{{ description | raw }}">
    <meta property="og:image" content="{{ image | raw }}">

    {# TWITTER #}
    <meta name="twitter:card" content="summary">
    <meta name="twitter:site" content="{{ siteName | raw }}">
    <meta name="twitter:url" content="{{ canonical | raw }}">
    <meta name="twitter:title" content="{{ title | raw }}">
    <meta name="twitter:description" content="{{ description | raw }}">
    <meta name="twitter:image" content="{{ image | raw }}">

    {# Insert the built style from manifest #}
    {% if command == "build" %}
        {% for input in manifest %}
            {% for cssFile in input.css %}
                <link href="{{ app_base }}{{ build_dirname }}/{{ cssFile }}" type="text/css" rel="stylesheet">
            {% endfor %}
        {% endfor %}
    {% endif %}
</head>
<body>

{# Root div application #}
<div id="root"></div>

{#
    DEV scripts
    - Enable hot module reload
    - Insert script tags, depend of /config/config.js -> "input" array entries
#}
{% if command == "serve" %}
    <script type="module">
      import RefreshRuntime from 'http://{{ host }}:{{ port }}{{ app_base }}{{ build_dirname }}/@react-refresh'
      RefreshRuntime.injectIntoGlobalHook(window);
      window.$RefreshReg$ = () => {};
      window.$RefreshSig$ = () => (type) => type;
      window.__vite_plugin_react_preamble_installed__ = true;
    </script>
    <script type="module" src="http://{{ host }}:{{ port }}{{ app_base }}{{ build_dirname }}/@vite/client"></script>
    {% for input in input_array %}
        <script type="module" src="http://{{ host }}:{{ port }}{{ app_base }}{{ build_dirname }}/{{ input }}"></script>
    {% endfor %}
{% endif %}

{# Insert the built scripts from manifest #}
{% if command == "build" %}
    {% for input in manifest %}
        {#
            Vite legacy-plugin build legacy script versions,
            they contain 'legacy' keyword in there own name, we can identify them by this one
            and add "nomodule" attribute en there script tag.
            @specs: https://html.spec.whatwg.org/multipage/scripting.html#script-nomodule-example
        #}
        {% if 'legacy' in input.file %}
            <script nomodule src="{{ app_base }}{{ build_dirname }}/{{ input.file }}"></script>
        {#
            ESM version
            If build script are ESM version, add "type=module" to there script tag
        #}
        {% else  %}
            <script type="module" src="{{ app_base }}{{ build_dirname }}/{{ input.file }}"></script>
        {% endif %}
    {% endfor %}
{% endif %}
</body>
</html>
