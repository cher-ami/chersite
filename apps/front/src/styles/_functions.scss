@use "./_viewport" as viewport;
@use "sass:math";

/// Is a number
/// @param {any} $value -
/// @return {boolean} -
@function is-number($value) {
  @return type-of($value) == "number";
}

//// check if a value is a string
@function is-string($value) {
  @return type-of($value) == "string";
}

/// Is absolute number
/// @param {Number} $value -
/// @return {Boolean} -
@function is-absolute-number($value) {
  @return is-number($value) and unitless($value);
}

/// Is a "calc" value
/// @param {any} $value -
/// @return {Boolean} -
@function is-calc($value) {
  @return is-string($value) and index("calc", $value) != null;
}

/// Calculate VW ratio
/// @param {Number} $n1 -
/// @param {Number} $n2 [1920] -
/// @return {} - vw value
@function ratioVW($n1, $n2: viewport.$viewport-reference-width) {
  @if not is-absolute-number($n1) or is-calc($n1) {
    @return $n1;
  } @else {
    @return calc($n1 / $n2 * 100) + vw;
  }
}

/// Calculate VH ratio
/// @param {Number} $n1 -
/// @param {Number} $n2 [1080] -
/// @return {type} -
@function ratioVH($n1, $n2: 1080) {
  @if not is-absolute-number($n1) or is-calc($n1) {
    @return $n1;
  } @else {
    @return calc($n1 / $n2 * 100) + vh;
  }
}

/// Add pixel unit to values
/// @param {Number} $value -
/// @return {string} - pixel value
@function toPx($value) {
  @if is-number($value) {
    @return #{$value} + px;
  } @else {
    @return $value;
  }
}

/// Add rem to values
/// @param {Number} $value -
/// @return {string} - rem value
@function toRem($value) {
  @if is-number($value) {
    @return #{$value} + rem;
  } @else {
    @return $value;
  }
}

// remove Units from a string
@function strip-units($number) {
  @return math.div($number, ($number * 0 + 1));
}
